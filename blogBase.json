{"singlePage": [], "startSite": "", "filingNum": "", "onePageListNum": 15, "commentLabelColor": "#006b75", "yearColorList": ["#bc4c00", "#0969da", "#1f883d", "#A333D0"], "i18n": "CN", "themeMode": "manual", "dayTheme": "light", "nightTheme": "dark", "urlMode": "pinyin", "script": "", "style": "", "head": "", "indexScript": "", "indexStyle": "", "bottomText": "", "showPostSource": 1, "iconList": {}, "UTC": 8, "rssSplit": "sentence", "exlink": {}, "needComment": 1, "allHead": "", "title": "Blog Title", "subTitle": "Blog description", "avatarUrl": "https://github.githubassets.com/favicons/favicon.svg", "GMEEK_VERSION": "last", "postListJson": {"P1": {"htmlDir": "docs/post/Hello World!.html", "labels": ["test"], "postTitle": "Hello World!", "postUrl": "post/Hello%20World%21.html", "postSourceUrl": "https://github.com/xubai-owo/xubai-owo.github.io/issues/1", "commentNum": 0, "wordCount": 13, "description": "# \u7b2c\u4e00\u7bc7\u6587\u7ae0\r\n\u6d4b\u8bd5\u4e00\u4e0b\u3002", "top": 0, "createdAt": 1730111608, "style": "", "script": "", "head": "", "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "createdDate": "2024-10-28", "dateLabelColor": "#bc4c00"}, "P2": {"htmlDir": "docs/post/cang-shu-ru-fa-(Hamster) -zi-yong-jiao-ben.html", "labels": ["\u4ed3\u8f93\u5165\u6cd5"], "postTitle": "\u4ed3\u8f93\u5165\u6cd5(Hamster) \u81ea\u7528\u811a\u672c", "postUrl": "post/cang-shu-ru-fa-%28Hamster%29%20-zi-yong-jiao-ben.html", "postSourceUrl": "https://github.com/xubai-owo/xubai-owo.github.io/issues/2", "commentNum": 0, "wordCount": 4135, "description": "# \u4ed3\u8f93\u5165\u6cd5(Hamster) \u81ea\u7528\u811a\u672c\r\n## DeepSeek\r\n```javascript\r\n// author: \u53d9\u767d\r\n// date: 2024-10-09\r\n// name: DeepSeek.js\r\n// \u6ce8\u610f\uff1a\u8bf7\u5728\u811a\u672c\u4e2d\u7684\u53d8\u91cf\u529f\u80fd\u4e2d\u6dfb\u52a0 deepseek_key \u53d8\u91cf\uff0c\u503c\u4e3a DeepSeek \u7684 API Key\r\n// \u5982\u679c\u60a8\u4f7f\u7528\u8f6c\u53d1\u5e73\u53f0\u7684 API \uff0c\u5219\u503c\u4e3a\u8f6c\u53d1\u5e73\u53f0\u7684 API Key, \u5e76\u4e14\u4fee\u6539BASE_URL\r\n// \u6b64\u811a\u672c\u4ec5\u517c\u5bb9openai\u683c\u5f0f(openai, deepseek, kimi\u4ee5\u53ca\u66f4\u591a\u517c\u5bb9openai\u683c\u5f0f\u7684\u90fd\u53ef\u4f7f\u7528\uff0c\u6e29\u5ea6\u9700\u8981\u6839\u636e\u5404\u5bb6ai\u81ea\u884c\u8c03\u6574)\r\n\r\n// \u4f9d\u6b21\u4e3abase_url, \u9ed8\u8ba4\u6a21\u578b\uff0c\u9ed8\u8ba4\u6e29\u5ea6\uff0c\u4e0d\u61c2\u8bf7\u52ff\u4fee\u6539\r\nconst BASE_URL = 'https://api.deepseek.com/v1/chat/completions';\r\nconst DEFAULT_MODEL = 'deepseek-chat';\r\n\r\n// \u4e0d\u540c\u4efb\u52a1\u7c7b\u578b\u7684\u63a8\u8350\u6e29\u5ea6\u503c\uff1a\u4ee3\u7801\u751f\u6210/\u6570\u5b66\u89e3\u9898 0.0, \u6570\u636e\u62bd\u53d6/\u5206\u6790 1.0, \u901a\u7528\u5bf9\u8bdd 1.3, \u7ffb\u8bd1 1.3, \u521b\u610f\u7c7b\u5199\u4f5c/\u8bd7\u6b4c\u521b\u4f5c 1.5\r\nconst DEFAULT_TEMPERATURE = 1.3;\r\n\r\nasync function deepseekDemo(question = '\u4f60\u597d', options = {}) {\r\n  const {\r\n    model = DEFAULT_MODEL,\r\n    temperature = DEFAULT_TEMPERATURE,\r\n    isShortAnswer = !question.endsWith('-')  // \u9ed8\u8ba4\u7b80\u77ed\u56de\u7b54\r\n  } = options;\r\n\r\n  // \u53ef\u81ea\u5b9a\u4e49systemPrompt\uff0c\u5728\u4f60\u7684\u95ee\u9898\u7ed3\u5c3e\u540e\u52a0-\u53f7\uff0c\u4f1a\u81ea\u52a8\u5e2e\u4f60\u8f6c\u77ed\u95ee\r\n  const systemPrompt = `\u4f60\u662f\u4e00\u4f4dAI\u52a9\u624b\uff0c\u80fd\u591f\u56de\u7b54\u7684\u4e13\u4e1a\u4ee5\u53ca\u51c6\u786e${isShortAnswer ? '\uff0c\u73b0\u5728\u8bf7\u5c3d\u91cf\u7528\u4e00\u53e5\u8bdd\u56de\u7b54\u6211\u7684\u95ee\u9898' : ''}`;\r\n\r\n  const messages = [\r\n    { role: 'system', content: systemPrompt },\r\n    { role: 'user', content: question }\r\n  ];\r\n\r\n  try {\r\n    const resp = await $http({\r\n      url: BASE_URL,\r\n      method: 'post',\r\n      header: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${$deepseek_key}`,\r\n      },\r\n      body: { messages, model, temperature },\r\n      timeout: 30,\r\n    });\r\n\r\n    const statusCode = resp.response.statusCode;\r\n    if (statusCode !== 200) {\r\n      throw new Error(`API\u8bf7\u6c42\u5931\u8d25: HTTP\u72b6\u6001\u7801 ${statusCode}`);\r\n    }\r\n\r\n    const parsedData = JSON.parse(resp.data);\r\n    if (!parsedData.choices || parsedData.choices.length === 0) {\r\n      throw new Error('API\u8fd4\u56de\u6570\u636e\u683c\u5f0f\u9519\u8bef: \u6ca1\u6709\u627e\u5230\u6709\u6548\u7684\u56de\u590d');\r\n    }\r\n\r\n    return parsedData.choices[0].message?.content || '';\r\n  } catch (error) {\r\n    let errorMessage = '\u672a\u77e5\u9519\u8bef';\r\n    if (error instanceof SyntaxError) {\r\n      errorMessage = 'API\u8fd4\u56de\u7684\u6570\u636e\u65e0\u6cd5\u89e3\u6790\u4e3aJSON';\r\n    } else if (error.message) {\r\n      errorMessage = error.message;\r\n    }\r\n    $log(`DeepSeek API \u9519\u8bef: ${errorMessage}`);\r\n    if (error.response) {\r\n      $log(`\u54cd\u5e94\u8be6\u60c5: ${JSON.stringify(error.response)}`);\r\n    }\r\n    return `\u62b1\u6b49\uff0c\u53d1\u751f\u4e86\u9519\u8bef: ${errorMessage}`;\r\n  }\r\n}\r\n\r\nasync function output() {\r\n  const question = $searchText || $pasteboardContent || '\u4f60\u597d';\r\n  return await deepseekDemo(question);\r\n}\r\n```\r\n## Gemini\r\n```js\r\n// author: \u53d9\u767d\r\n// date: 2024-10-03\r\n// name: Gemini.js\r\n// \u6ce8\u610f\uff1a\u8bf7\u5728\u811a\u672c\u4e2d\u7684\u53d8\u91cf\u529f\u80fd\u4e2d\u6dfb\u52a0 gemini_key \u53d8\u91cf\uff0c\u503c\u4e3a Gemini \u7684 API Key\r\n\r\nconst BASE_URL = 'https://generativelanguage.googleapis.com/v1beta/models';\r\nconst DEFAULT_MODEL = 'gemini-1.5-flash';\r\n\r\nasync function geminiDemo(question = '\u4f60\u597d', options = {}) {\r\n  const {\r\n    model = DEFAULT_MODEL,\r\n    isShortAnswer = question.endsWith('-')\r\n  } = options;\r\n\r\n  const systemPrompt = `\u4f60\u662f\u4e00\u4f4dAI\u52a9\u624b\uff0c\u80fd\u591f\u56de\u7b54\u7684\u4e13\u4e1a\u4ee5\u53ca\u51c6\u786e${isShortAnswer ? '\uff0c\u73b0\u5728\u8bf7\u5c3d\u91cf\u7528\u4e00\u53e5\u8bdd\u56de\u7b54\u6211\u7684\u95ee\u9898' : ''}`;\r\n\r\n  const url = `${BASE_URL}/${model}:generateContent?key=${$gemini_key}`;\r\n  const body = {\r\n    'system_instruction': {\r\n      'parts': {\r\n        'text': systemPrompt\r\n      }\r\n    },\r\n    'contents': {\r\n      'parts': {\r\n        'text': question\r\n      }\r\n    }\r\n  };\r\n\r\n  try {\r\n    const resp = await $http({\r\n      url,\r\n      method: 'post',\r\n      header: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: body,\r\n      timeout: 30,\r\n    });\r\n\r\n    const statusCode = resp.response.statusCode;\r\n    if (statusCode !== 200) {\r\n      throw new Error(`API\u8bf7\u6c42\u5931\u8d25: HTTP\u72b6\u6001\u7801 ${statusCode}`);\r\n    }\r\n\r\n    const parsedData = JSON.parse(resp.data);\r\n    if (!parsedData.candidates || parsedData.candidates.length === 0) {\r\n      throw new Error('API\u8fd4\u56de\u6570\u636e\u683c\u5f0f\u9519\u8bef: \u6ca1\u6709\u627e\u5230\u6709\u6548\u7684\u56de\u590d');\r\n    }\r\n\r\n    return parsedData.candidates[0].content.parts[0].text || '';\r\n  } catch (error) {\r\n    let errorMessage = '\u672a\u77e5\u9519\u8bef';\r\n    if (error instanceof SyntaxError) {\r\n      errorMessage = 'API\u8fd4\u56de\u7684\u6570\u636e\u65e0\u6cd5\u89e3\u6790\u4e3aJSON';\r\n    } else if (error.message) {\r\n      errorMessage = error.message;\r\n    }\r\n    $log(`Gemini API \u9519\u8bef: ${errorMessage}`);\r\n    if (error.response) {\r\n      $log(`\u54cd\u5e94\u8be6\u60c5: ${JSON.stringify(error.response)}`);\r\n    }\r\n    return `\u62b1\u6b49\uff0c\u53d1\u751f\u4e86\u9519\u8bef: ${errorMessage}`;\r\n  }\r\n}\r\n\r\nasync function output() {\r\n  const question = $searchText || $pasteboardContent || '\u4f60\u597d-';\r\n  return await geminiDemo(question);\r\n}\r\n```\r\n\u3002", "top": 0, "createdAt": 1730111983, "style": "", "script": "", "head": "", "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "createdDate": "2024-10-28", "dateLabelColor": "#bc4c00"}}, "singeListJson": {}, "labelColorDict": {"bug": "#d73a4a", "documentation": "#0075ca", "duplicate": "#cfd3d7", "enhancement": "#a2eeef", "help wanted": "#008672", "invalid": "#e4e669", "question": "#d876e3", "test": "#c2e0c6", "\u4ed3\u8f93\u5165\u6cd5": "#0e8a16"}, "displayTitle": "Blog Title", "faviconUrl": "https://github.githubassets.com/favicons/favicon.svg", "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "primerCSS": "<link href='https://mirrors.sustech.edu.cn/cdnjs/ajax/libs/Primer/21.0.7/primer.css' rel='stylesheet' />", "homeUrl": "https://xubai-owo.github.io", "prevUrl": "disabled", "nextUrl": "disabled"}